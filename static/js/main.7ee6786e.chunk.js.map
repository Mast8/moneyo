{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","className","state","action","type","transactions","filter","transaction","id","payload","initialState","JSON","parse","localStorage","getItem","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","useEffect","setItem","stringify","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","customTotal","toString","replace","IncomeExpenses","amounts","customNumber","number","customIncome","customExpense","Transaction","sign","text","Math","abs","onClick","TransactionList","incomes","e","expenses","income","key","expense","AddTransaction","useState","setText","setAmount","alert","clearFields","onSubmit","preventDefault","trim","newTransaction","floor","random","htmlFor","onChange","target","placeholder","required","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ee6786e.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n  return (\n    <h2 className=\"title\">\n      Expense helper\n    </h2>\n  )\n}\n","export default (state, action) => {\n  \n  switch(action.type) {\n    case 'DELETE_TRANSACTION':\n      return {\n        ...state,\n        transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n      }\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions]\n      }\n    default:\n      return state;\n  }\n}","import React, { createContext, useReducer, useEffect } from 'react';\nimport AppReducer from './AppReducer';\n\n// Initial state\nconst initialState = {\n  transactions:\n    JSON.parse(localStorage.getItem(\"transactions\")) || []\n};\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  useEffect(() => {\n    localStorage.setItem(\n      \"transactions\",\n      JSON.stringify(state.transactions)\n    );\n  });\n\n  // Actions\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return (<GlobalContext.Provider value={{\n    transactions: state.transactions,\n    deleteTransaction,\n    addTransaction\n  }}>\n    {children}\n  </GlobalContext.Provider>);\n}","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n  const customTotal = total.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n\n  return (\n    <>\n      <h4>Balance</h4>\n      <h1 className={total < 0 ? 'money-minus' : 'money-plus'} >${customTotal}</h1>\n    </>\n  )\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport './IncomeExpenses.css';\n\nexport const IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const customNumber = (number) => {\n    return number.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  const customIncome = customNumber(income);\n  \n  const expense = (\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n    ).toFixed(2);\n  const customExpense = customNumber(expense);\n    \n  return (\n    <div className=\"inc-exp-container\">\n        <div>\n          <h4 className=\"green\">Income</h4>\n          <p className=\"money-plus\">{customIncome}</p>\n        </div>\n        <div>\n          <h4 className=\"red\">Expense</h4>\n          <p className=\"money-minus\">{customExpense}</p>\n        </div>\n    </div>\n  )\n}\n","import React, {useContext} from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  const sign = transaction.amount < 0 ? '-' : '+';\n\n  return (\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\n      {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span>\n      <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\n    </li>\n  )\n}\n","import React, { useContext } from 'react';\nimport { Transaction } from './Transaction';\n\nimport { GlobalContext } from '../context/GlobalState';\nimport './TransactionList.css';\n\nexport const TransactionList = () => {\n  const { transactions } = useContext(GlobalContext);\n  \n  const incomes = transactions.filter(e => e.amount > 0);\n  const expenses = transactions.filter(e => e.amount < 0);\n\n  return (\n    <>\n     <h3>Transactions</h3>\n    <div className=\"transactions\">\n      <ul className=\"list-income\">\n        {incomes.map(income => (<Transaction key={income.id} transaction={income} />))}\n      </ul>\n      <ul className=\"list\">\n        {expenses.map(expense => (<Transaction key={expense.id} transaction={expense} />))}\n      </ul>\n    </div>\n    </>\n  )\n}\n","import React, {useState, useContext} from 'react'\nimport { GlobalContext } from '../context/GlobalState';\nimport './AddTransaction.css';\n\n\nexport const AddTransaction = () => {\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState('');\n\n  const { addTransaction } = useContext(GlobalContext);\n  const [alert, setAlert] = useState(\"\");\n\n\n\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if(text.trim() !== \"\"  ){\n      const newTransaction = {\n        id: Math.floor(Math.random() * 100000000),\n        text,\n        amount: +amount\n      }\n      addTransaction(newTransaction);\n      clearFields();\n    }\n   \n  }\n\n\n  const clearFields =() => {\n    setText(\"\");\n    setAmount(\"\");\n  }\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n      <h3>Add transaction</h3>\n        <label htmlFor=\"text\">{alert}</label>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} \n          placeholder=\"Enter text...\" required />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\"\n            >Amount <br />\n            (negative - expense, positive - income)</label>\n          <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value.trim())} \n          placeholder=\"Enter amount...\" required />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  )\n}\n","import React from 'react';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <AddTransaction />\n        <div className=\"balance\"> \n          <Balance />\n          <IncomeExpenses />\n          <TransactionList />\n        </div>\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}